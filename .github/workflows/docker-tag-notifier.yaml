name: Docker Tag Tracker

on:
  push:
    branches:
      - main
  schedule:
    # Runs every 6 hours
    - cron: '0 */6 * * *'
  workflow_dispatch:

jobs:
  check_docker_tag:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'
    
    - name: Check for existing artifact
      id: check_artifact
      run: |
        # Check if the artifact file already exists
        if [ -f last_docker_tag.txt ]; then
          echo "Artifact found, proceeding to download..."
          echo "data_found=true" >> $GITHUB_ENV
        else
          echo "No artifact found, skipping download..."
          echo "data_found=false" >> $GITHUB_ENV
        fi

    - name: Download the data artifact
      if: env.data_found == 'true'
      uses: actions/download-artifact@v3
      with:
        name: last_docker_tag
        path: ./

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests

    - name: Run Docker Tag Tracker
      env:
        PUSHBULLET_ACCESS_TOKEN: ${{ secrets.PUSHBULLET_ACCESS_TOKEN }}
        PUSHBULLET_CHANNEL_TAG: ${{ secrets.PUSHBULLET_CHANNEL_TAG }}
      run: |
        python main.py
  
    - name: Upload the generated data as an artifact
      uses: actions/upload-artifact@v3
      with:
        name: last_docker_tag
        path: last_docker_tag.txt
